{"version":3,"sources":["images/paws-logo.png","config.js","services/token-service.js","components/MainNav/MainNav.js","ApiContext.js","components/LandingPage/LandingPage.js","components/PostsHomePage/PostsHomePage.js","components/Post/Post.js","components/AddPostNav/AddPostNav.js","components/MyPosts/MyPosts.js","components/LoginForm/LoginForm.js","components/UpdatePost/UpdatePost.js","components/Profile/Profile.js","components/UpdateUser/UpdateUser.js","services/auth-api-service.js","components/ValidationError.js","components/SignUpForm/SignUpForm.js","components/LoggedInNav/LoggedInNav.js","components/HamburgerNav/HamburgerNav.js","App.js","index.js"],"names":["module","exports","API_BASE_URL","process","TOKEN_KEY","API_ENDPOINT","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","email","password","btoa","MainNav","props","className","to","src","paws","alt","right","id","onClick","handleLogout","React","createContext","posts","addPost","deletePost","LandingPage","role","PostsHomePage","map","post","key","pet_name","href","moment","birthdate","format","types_of_pet","hobbies","Post","onSubmit","htmlFor","type","name","placeholder","required","rows","AddPostNav","MyPosts","state","options","method","headers","fetch","then","res","ok","json","Error","data","setState","catch","err","alert","this","dog_name","handleDeletePost","filter","setId","Component","LoginForm","loginUser","error","UpdatePost","postId","updatePost","defaultValue","type_of_pet","Profile","users","first_name","last_name","deleteUser","UpdateUser","updateUser","e","preventDefault","inputVal","target","value","body","JSON","stringify","location","AuthApiService","postLogin","Promise","reject","console","postUser","user","ValidationError","message","SignUpForm","handleUserSubmit","document","getElementById","reset","signupError","repeatPassword","firstNameValid","lastNameValid","emailValid","passwordValid","passwordMatch","formValid","validationMessages","fieldValue","fieldErrors","hasError","trim","length","match","RegExp","validateFirstName","validateLastName","validatePassword","matchPasswords","validateEmail","event","onChange","updateFirstName","updateLastName","updateEmail","minLength","updatePassword","updateRepeatPassword","disabled","LoggedInNav","HamburgerNav","App","post_id","logged_in","logInError","signUpError","handleSubmit","age","handleDeleteUser","user_id","login_email","login_password","authToken","handleUpdate","updatedPost","setPostId","postInput","getUser","myposts","exact","path","render","ApiContext","Provider","addUser","component","WebFont","load","google","families","ReactDOM"],"mappings":"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","file":"static/js/main.f8d9c163.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paws-logo.812d3403.png\";","export default {\n    API_BASE_URL: process.env.API_BASE_URL,\n    TOKEN_KEY: process.env.TOKEN_KEY,\n    API_ENDPOINT: 'http://localhost:8000/api'\n\n}","import config from '../config'\n\nconst TokenService = {\n    saveAuthToken(token) {\n        window.localStorage.setItem(config.TOKEN_KEY, token)\n    },\n    getAuthToken() {\n        return window.localStorage.getItem(config.TOKEN_KEY)\n    },\n    clearAuthToken() {\n        window.localStorage.removeItem(config.TOKEN_KEY)\n    },\n    hasAuthToken() {\n        return !!TokenService.getAuthToken()\n    },\n    makeBasicAuthToken(email, password) {\n        return window.btoa(`${email}: ${password}`)\n    }\n}\n\nexport default TokenService","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { slide as Menu } from 'react-burger-menu';\nimport './MainNav.css';\nimport paws from '../../images/paws-logo.png';\nimport TokenService from '../../services/token-service';\n\nfunction MainNav(props) {\n\n    return (\n        <div className=\"header-nav\">\n            <Link to='/' className='nav-title'><img className='icon' src={paws} alt='paw-logo'></img><span className='title'>PawUp</span></Link>\n            <Menu right>\n                <Link to='/' id=\"home\" className=\"menu-item\">Home</Link><br />\n                <Link id=\"demo\" className=\"menu-item\" to='/posts'>Posts</Link><br />\n                <Link id=\"signup\" className=\"menu-item\" to='/signup'>Sign Up</Link><br />\n\n                {/*Line 16-19 checks to see if auth token is in browser to either render log in or log out link */}\n                {TokenService.hasAuthToken()\n                    ? <Link to='/' className=\"menu-item\" onClick={props.handleLogout}>Log out</Link>\n                    : <Link id=\"login\" className=\"menu-item\" to='/login'>Log In</Link>\n                }\n\n            </Menu>\n        </div>\n    );\n}\n\nexport default MainNav;\n","import React from 'react';\n\nexport default React.createContext({\n    posts: [],\n    addPost: () => { },\n    deletePost: () => { }\n});\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Spotlight from '../Spotlight/Spotlight';\nimport './LandingPage.css';\n\nfunction LandingPage(props) {\n    return (\n        <>\n            <main role=\"main\" className='landing-main'>\n                <header role=\"banner\" className='landing-header'>\n                    <h1 id=\"landing-title\">PawUp</h1>\n                    <h2 id=\"phrase\">Connect your pets with pets from your neighborhood.</h2>\n                    <Link to='/signup'><button className='btn'>Sign Up Today!</button></Link>\n                </header>\n                <section className='desc-section'>\n                    {/* <Spotlight /> */}\n                </section>\n            </main>\n            <footer className=\"footer\">\n                <h5>Huseyin Gundogdu</h5>\n                <p>Copyright @ 2019</p>\n            </footer>\n        </>\n    )\n}\n\nexport default LandingPage;","import React from 'react';\nimport moment from 'moment';\nimport './PostsHomePage.css';\n\nfunction PostsHomePage(props) {\n    return (\n        <main>\n            <div role=\"banner\">\n                <h1 className='main-title-post'>PawUp Community Pets</h1>\n            </div>\n            <section className='post-main'>\n                {props.posts.map(post => {\n                    return (\n                        <section key={post.id} className='card' >\n                            <h4 className='dog_name'>{post.pet_name}</h4>\n                            <section className='container'>\n                                <p>Owner Email: <a href={`mailto:${post.email}?subject=Interested in ${post.pet_name}!`} className='email'>{post.email}</a></p>\n                                <p>Birthdate: {moment(post.birthdate).format(\"MM-DD-YYYY\")}</p>\n                                <p>Type of Pet: {post.types_of_pet}</p>\n                                <p>Hobbies: {post.hobbies}</p>\n                            </section>\n                        </section>\n                    )\n                })}\n            </section>\n        </main>\n    )\n}\n\nexport default PostsHomePage;","import React from 'react';\nimport './Post.css';\n\nfunction Post(props) {\n    return (\n        <main className='flex-container'>\n            <header>\n                <h1 className='post-title'>New Post</h1>\n            </header>\n            <section className='post-form-section'>\n                <form id=\"post-form\" className='post-form' onSubmit={props.addPost}>\n                    <div className=\"form-section\">\n                        <label htmlFor=\"pet_name\">Pet Name</label>\n                        <input type=\"text\" name=\"dog_name\" placeholder=\"Jax\" required />\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor=\"breed\">Type of Pet</label>\n                        <input type=\"text\" name=\"breed\" placeholder=\"Maltipoo\" required />\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor=\"dog_bday\">Birthdate</label>\n                        <input type=\"date\" name=\"dog_bday\" />\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor=\"lifestyle\">Hobbies</label>\n                        <textarea name=\"lifestyle\" rows=\"15\" placeholder=\"Please enter a description of your dogs needs and lifestyle\" required></textarea>\n                    </div>\n                    <button type=\"submit\" className=\"sub-btn\">Submit</button>\n                    <button type=\"reset\" className=\"res-btn\">Reset</button>\n                </form>\n            </section>\n        </main>\n    )\n}\n\nexport default Post;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { slide as Menu } from 'react-burger-menu';\nimport './AddPostNav.css';\nimport paws from '../../images/paws-logo.png';\n\nfunction AddPostNav(props) {\n    return (\n        <>\n            <Link to='/' className='nav-title'><img className='icon' src={paws} alt='paws-up-logo'></img>{' '}<span className='title'>PawUp</span></Link>\n            <>\n                <Menu>\n                    <Link to='/posts' className='menu-item'>Posts</Link><br />\n                    <Link to='/myPosts' className=\"menu-item\">My Post</Link><br />\n                    <Link to='/profile' className=\"menu-item\">Profile</Link><br />\n                    <Link to='/posts' className=\"menu-item\" onClick={props.handleLogout}>Log out</Link>\n                </Menu>\n            </>\n        </>\n    )\n}\n\nexport default AddPostNav;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\nimport './MyPosts.css';\n\n\nclass MyPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: []\n        }\n    }\n\n    componentDidMount() {\n        const options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        }\n        fetch(`${config.API_BASE_URL}/posts/myposts`, options)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    throw new Error('Something went wrong');\n                }\n            })\n            .then(data => {\n                this.setState({ posts: data })\n            })\n            .catch(err => {\n                alert(`Something went wrong ${err}`)\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <main className='flex-container'>\n                    <header role=\"banner\">\n                        <h1>My Posts</h1>\n                    </header>\n                    <section className='myPost-grid'>\n                        {this.state.posts.map(post => {\n                            return (\n                                <section key={post.id} className='myPost-container'>\n                                    <h4 className='dog_name'>{post.dog_name}</h4>\n                                    <section className='container'>\n                                        <p>Owner Email:  <a href={`mailto:${post.email}?subject=Interested in ${post.pet_name}!`} className='email'>{post.email}</a></p>\n                                        <p>Birthdate: {moment(post.birthdate).format(\"MM-DD-YYYY\")}</p>\n                                        <p>Types-of-pet: {post.types_of_pet}</p>\n                                        <p>Hobbies: {post.hobbies}</p>\n                                    </section>\n                                    <button className='deletePostBtn' onClick={() => (\n                                        /* eslint-disable */\n                                        this.props.handleDeletePost(post.id, this.handleDeletePost),\n                                        this.setState({ posts: this.state.posts.filter(posts => posts.id !== post.id) })\n                                        /* eslint-disable */\n                                    )\n                                    }>Delete</button>\n                                    <Link to='/edit'><button className='update-btn' onClick={() => {\n                                        this.props.setId(post.id)\n                                    }}>Update</button></Link>\n                                </section>\n                            )\n                        })}\n                    </section>\n                </main>\n            </>\n        )\n    }\n}\n\n\nexport default MyPosts;","\nimport React from 'react';\nimport './LoginForm.css';\n\nfunction LoginForm(props) {\n    return (\n        <section className='flex-container'>\n            <h2 className='login-title'>Log In</h2>\n            <form className='login_form' onSubmit={props.loginUser}>\n                <section className='login_form-container'>\n                    <div>\n                        <label htmlFor='login_email'>Email:</label>\n                        <input type='email' name='login_email' id='login_email' />\n                    </div>\n                    <div>\n                        <label htmlFor='login_password'>Password:</label>\n                        <input type='password' name='password' id='login_password' />\n                    </div>\n                    <button type='submit' className='sub-btn'>Log in</button>\n                    {props.error ? <h4>Incorrect Email or Password</h4> : <></>}\n                </section>\n            </form>\n            <section>\n                <h3>PawUp Demo Credentials</h3>\n                <p>Email: abc@xyz.com</p>\n                <p>Password: password</p>\n            </section>\n        </section>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport './UpdatePost.css';\n\nfunction UpdatePost(props) {\n    const post = props.posts.filter(post => post.id === props.postId)\n    if (post) {\n        return (\n            <main className='flex-container'>\n                <header>\n                    <h1 className='update-post-title'>Update Post</h1>\n                </header>\n                <section className='update-post-section'>\n                    <form id=\"update-post-form\" className='update-post-form' onSubmit={props.updatePost}>\n                        <div className=\"form-section\">\n                            <label htmlFor=\"pet_name\">Pet Name</label>\n                            <input type=\"text\" name=\"pet_name\" defaultValue={post[0].pet_name} required />\n                        </div>\n                        <div className=\"form-section\">\n                            <label htmlFor=\"owner_email\">Email</label>\n                            <input type=\"email\" name=\"owner_email\" defaultValue={post[0].email} required />\n                        </div>\n                        <div className=\"form-section\">\n                            <label htmlFor=\"breed\">Type of Pet</label>\n                            <input type=\"text\" name=\"type_of_pet\" defaultValue={post[0].type_of_pet} required />\n                        </div>\n                        <div className=\"form-section\">\n                            <label htmlFor=\"lifestyle\">Hobbies</label>\n                            <textarea name=\"lifestyle\" rows=\"15\" placeholder=\"Please enter a description of your dogs needs and lifestyle\" defaultValue={post[0].hobbies} required></textarea>\n                        </div>\n                        <button type=\"submit\" className='sub-btn'>Submit</button>\n                        <button type=\"reset\" className='res-btn'>Reset</button>\n                    </form>\n                </section>\n            </main>\n        )\n    } else {\n        return (\n            <main>\n                <h1>No Post To Update!</h1>\n                <h2>Try Again</h2>\n            </main>\n        )\n    }\n\n}\n\nexport default UpdatePost;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\nimport './Profile.css';\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        const options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        }\n\n        fetch(`${config.API_BASE_URL}/users/user`, options)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    throw new Error('Something went wrong');\n                }\n            })\n            .then(data => {\n                this.setState({ users: data })\n            })\n            .catch(err => {\n                throw new Error(err)\n            }\n            )\n    }\n\n    render() {\n        return (\n            <main className='flex-container'>\n                <header role=\"banner\">\n                    <h2>My Profile</h2>\n                </header>\n                <section key={this.state.users.id} className='profile-section'>\n                    <h4 className='profile-title'>{this.state.users.first_name} {this.state.users.last_name}</h4>\n                    <p>Email: {this.state.users.email}</p>\n                    <button className='deletePostBtn' onClick={() => {\n                        this.props.deleteUser(this.state.users.id, this.deleteUser)\n                    }}>Delete</button>\n                    <Link to='/editProfile'><button className='update-btn'>Update</button></Link>\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport TokenService from '../../services/token-service';\nimport config from '../../config';\nimport './UpdateUser.css';\n\n\nclass UpdateUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        const options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        }\n\n        fetch(`${config.API_BASE_URL}/users/user`, options)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    throw new Error('Something went wrong');\n                }\n            })\n            .then(data => {\n                this.setState({ users: data })\n            })\n            .catch(err => {\n                throw new Error(err)\n            }\n            )\n    }\n\n    updateUser = e => {\n        e.preventDefault();\n\n        const inputVal = {\n            first_name: e.target.first_name.value,\n            last_name: e.target.last_name.value,\n            email: e.target.email.value,\n        }\n\n        fetch(`${config.API_BASE_URL}/users/user`, {\n            method: 'PATCH',\n            body: JSON.stringify(inputVal),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n            .then(res => {\n                if (res.ok) {\n                    TokenService.clearAuthToken();\n                    window.location.href = '/login'\n                } else {\n                    return res.json().then(error => {\n                        throw error;\n                    });\n                }\n            })\n    }\n\n    render() {\n        if (this.state.users) {\n            return (\n                <main className='flex-container'>\n                    <header>\n                        <h1 className='update-user-title'>Update User</h1>\n                    </header>\n                    <section className='update-user-section'>\n                        <form id=\"update-user-form\" className='update-user-form' onSubmit={this.updateUser}>\n                            <div className=\"form-section\">\n                                <label htmlFor=\"first_name\">First Name</label>\n                                <input type=\"text\" name=\"first_name\" id=\"first_name\" defaultValue={this.state.users.first_name} required />\n                            </div>\n                            <div className=\"form-section\">\n                                <label htmlFor=\"last_name\">Last Name</label>\n                                <input type=\"text\" name=\"last_name\" id=\"last_name\" defaultValue={this.state.users.last_name} required />\n                            </div>\n                            <div className=\"form-section\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input type=\"email\" name=\"email\" id=\"email\" defaultValue={this.state.users.email} required />\n                            </div>\n                            <button type=\"submit\" className='sub-btn'>Submit</button>\n                            <button type=\"reset\" className='res-btn'>Reset</button>\n                        </form>\n                    </section>\n                </main>\n            )\n        } else {\n            return (\n                <main>\n                    <h1>User Does Not Exist!</h1>\n                    <h2>Try Again</h2>\n                </main>\n            )\n        }\n    }\n}\n\nexport default UpdateUser;","import config from '../config'\n\nconst AuthApiService = {\n    postLogin({ email, password }) {\n        return fetch(`${config.API_ENDPOINT}/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(res => {\n                if (!res.ok) {\n                    return res.json().then(e => Promise.reject(e))\n                }\n                else {\n                    res.json()\n                }\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    },\n    postUser(user) {\n        return fetch(`${config.API_ENDPOINT}/users`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user })\n        })\n            .then(res => {\n                if (!res.ok) {\n                    return res.json().then(e => Promise.reject(e))\n                }\n                else {\n                    res.json()\n                }\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    }\n\n}\n\nexport default AuthApiService","import React from 'react';\n\n\nfunction ValidationError(props) {\n    if (props.message) {\n        return (\n            <div className=\"error\">{props.message}</div>\n        );\n    }\n\n    return <></>\n}\n\nexport default ValidationError;","import React, { Component } from 'react';\nimport ValidationError from '../ValidationError';\nimport config from '../../config';\nimport './SignUpForm.css';\n\nclass SignUpForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: '',\n            repeatPassword: '',\n            firstNameValid: false,\n            lastNameValid: false,\n            emailValid: false,\n            passwordValid: false,\n            passwordMatch: false,\n            formValid: false,\n            validationMessages: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                password: '',\n                repeatPassword: ''\n            }\n        }\n    }\n\n    handleUserSubmit = e => {\n        e.preventDefault();\n\n        const user = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        fetch(`${config.API_BASE_URL}/users`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(user => {\n                const form = document.getElementById('signup_form');\n                form.reset();\n                window.location.href = '/login'\n            })\n            .catch(error => {\n                this.setState({ signupError: error })\n            })\n    }\n\n    validateFirstName(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessages }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.name = 'Name is required';\n            hasError = true;\n        } else {\n            fieldErrors.name = '';\n            hasError = false;\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            firstNameValid: !hasError\n        }, this.formValid);\n    }\n\n    validateLastName(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessages }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.name = 'Name is required';\n            hasError = true;\n        } else {\n            fieldErrors.name = '';\n            hasError = false;\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            lastNameValid: !hasError\n        }, this.formValid);\n    }\n\n    validatePassword(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessages };\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.password = 'Password is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 8 || fieldValue.length > 72) {\n                fieldErrors.password = 'Password must be between 8 and 72 characters long';\n                hasError = true;\n            } else {\n                /* eslint-disable */\n                if (!fieldValue.match(new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/))) {\n                    /* eslint-disable */\n                    fieldErrors.password = 'Password must contain at least one number and one letter and one special character';\n                    hasError = true;\n                } else {\n                    fieldErrors.password = '';\n                    hasError = false;\n                }\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            passwordValid: !hasError\n        }, this.formValid);\n\n    }\n\n    validateEmail(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessages };\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.email = 'Email is required';\n            hasError = true;\n        } else {\n            /* eslint-disable */\n            if (!fieldValue.match(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/))) {\n                /* eslint-disable */\n                fieldErrors.email = 'Invalid Email Address'\n                hasError = true;\n            } else {\n                fieldErrors.email = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            emailValid: !hasError\n        }, this.formValid)\n    }\n\n    matchPasswords(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessages };\n        let hasError = false;\n\n        const password = this.state.password;\n\n        if (fieldValue !== password) {\n            fieldErrors.repeatPassword = 'Passwords do not match';\n            hasError = true;\n        } else {\n            fieldErrors.repeatPassword = '';\n            hasError = false;\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            passwordMatch: !hasError\n        }, this.formValid);\n\n    }\n\n    formValid() {\n        this.setState({\n            formValid: this.state.emailValid && this.state.passwordValid && this.state.passwordMatch\n        })\n    }\n\n    updateFirstName(name) {\n        this.setState({ first_name: name }, () => { this.validateFirstName(name) });\n    }\n\n    updateLastName(name) {\n        this.setState({ last_name: name }, () => { this.validateLastName(name) })\n    }\n\n    updatePassword(password) {\n        this.setState({ password }, () => { this.validatePassword(password) })\n    }\n\n    updateRepeatPassword(repeatPassword) {\n        this.setState({ repeatPassword }, () => { this.matchPasswords(repeatPassword) })\n    }\n\n    updateEmail(email) {\n        this.setState({ email }, () => { this.validateEmail(email) })\n    }\n\n    render() {\n        return (\n            <section className='flex-container'>\n                <header>\n                    <h3 className='signup-title'>Find Your PawUp Friend Today</h3>\n                </header>\n                <section className='form-container'>\n                    <form className='signup_form' id='signup_form' onSubmit={(event) => this.handleUserSubmit(event)}>\n                        <div>\n                            <label htmlFor=\"first_name\">First name:</label>\n                            <input placeholder='First Name' type=\"text\" name='first_name' id='first-name' onChange={e => this.updateFirstName(e.target.value)} required />\n                            <ValidationError hasError={!this.state.firstNameValid} message={this.state.validationMessages.name} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"last_name\">Last name:</label>\n                            <input type=\"text\" name='last_name' id='last-name' placeholder='Last Name' onChange={e => this.updateLastName(e.target.value)} required />\n                            <ValidationError hasError={!this.state.lastNameValid} message={this.state.validationMessages.name} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"email\" name='email' id='email' onChange={e => this.updateEmail(e.target.value)} required />\n                            <ValidationError hasError={!this.state.emailValid} message={this.state.validationMessages.email} />\n                        </div>\n                        <div>\n                            <label htmlFor='password'>Password (8 characters minimum):</label>\n                            <input type='password' name='password' id='password' minLength='8' onChange={e => this.updatePassword(e.target.value)} required />\n                            <ValidationError hasError={!this.state.passwordValid} message={this.state.validationMessages.password} />\n                        </div>\n                        <div>\n                            <label htmlFor='confirm'>Confirm Password:</label>\n                            <input type='password' name='confirm' id='confirm' minLength='8' onChange={e => this.updateRepeatPassword(e.target.value)} required />\n                            <ValidationError hasError={!this.state.passwordMatch} message={this.state.validationMessages.repeatPassword} />\n                        </div>\n                        <button className='sub-btn' type='submit' disabled={!this.state.formValid}>Sign Up</button>\n                    </form>\n                </section>\n            </section>\n        )\n    }\n}\n\nexport default SignUpForm;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { slide as Menu } from 'react-burger-menu';\n\nfunction LoggedInNav(props) {\n    return (\n        <Menu>\n            <Link to='/posts' className=\"menu-item\">Posts</Link><br className='bm-item' />\n            <Link to='/addPost' className=\"menu-item\">Create Post</Link><br className='bm-item' />\n            <Link to='/myPost' className=\"menu-item\">My Post</Link><br className='bm-item' />\n            <Link to='/profile' className=\"menu-item\">Profile</Link><br className='bm-item' />\n            <Link to='/posts' className=\"menu-item\" onClick={props.handleLogout}>Log out</Link>\n        </Menu>\n    );\n}\n\nexport default LoggedInNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TokenService from '../../services/token-service';\nimport LoggedInNav from '../LoggedInNav/LoggedInNav';\nimport { slide as Menu } from 'react-burger-menu';\nimport paws from '../../images/paws-logo.png';\nimport './HamburgerNav.css';\n\nfunction HamburgerNav(props) {\n    return (\n        <>\n            <Link to='/' className='nav-title'><img className='icon' src={paws} alt='paws-logo'></img><span className='title'>PawUp</span></Link>\n            <>\n                {/*Line 15-22 checks if the user is logged in */}\n                {TokenService.hasAuthToken() ?\n                    <LoggedInNav handleLogout={props.handleLogout} />\n                    :\n                    <Menu right>\n                        <Link to='/login' className=\"menu-item\">Log In</Link><br />\n                        <Link to='/signup' className=\"menu-item\">Sign Up</Link>\n                    </Menu>\n                }\n            </>\n        </>\n    );\n}\n\nexport default HamburgerNav;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport MainNav from './components/MainNav/MainNav';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport PostsHomePage from './components/PostsHomePage/PostsHomePage';\nimport Post from './components/Post/Post'\nimport AddPostNav from './components/AddPostNav/AddPostNav';\nimport config from './config';\nimport ApiContext from './ApiContext';\nimport MyPosts from './components/MyPosts/MyPosts';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport TokenService from './services/token-service';\nimport UpdatePost from './components/UpdatePost/UpdatePost';\nimport Profile from './components/Profile/Profile';\nimport UpdateUser from './components/UpdateUser/UpdateUser';\nimport AuthApiService from './services/auth-api-service';\nimport SignUpForm from './components/SignUpForm/SignUpForm';\nimport HamburgerNav from './components/HamburgerNav/HamburgerNav';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    post_id: null,\n    logged_in: false,\n    logInError: null,\n    signUpError: null,\n  }\n\n\n  componentDidMount() {\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/posts`, options)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        else {\n          throw new Error('Something went wrong.');\n        }\n      })\n      .then(postInput => {\n        this.setState({ posts: postInput })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n    if (this.state.logged_in) {\n      this.getUser();\n    }\n  }\n\n  getMyPosts() {\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    }\n    fetch(`${config.API_ENDPOINT}/posts/myposts`, options)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        else {\n          throw new Error('Something went wrong');\n        }\n      })\n      .then(postInput => {\n        this.setState({ myposts: postInput })\n      })\n      .catch(err => {\n        console.error({ err })\n      })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const post = {\n      pet_name: event.target.pet_name.value,\n      age: event.target.age.value,\n      types_of_pet: event.target.types_of_pet.value,\n      hobbies: event.target.hobbies.value\n    }\n\n    fetch(`${config.API_ENDPOINT}/posts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(post),\n    })\n      .then((res) => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(post => {\n        this.addPost(post);\n        const form = document.getElementById('post-form')\n        form.reset();\n        window.location.href = 'posts'\n      })\n      .catch(err => {\n        console.error({ err })\n      })\n  }\n\n  handleDeletePost = post_id => {\n    fetch(`${config.API_ENDPOINT}/posts/${post_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.setState({\n          posts: this.state.posts.filter(post => post.id !== post_id)\n        })\n      })\n      .catch(err => {\n        console.error({ err })\n      })\n  }\n\n  handleDeleteUser = user_id => {\n    fetch(`${config.API_ENDPOINT}/users/user`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.setState({ posts: this.state.posts.filter(post => post.id !== user_id) })\n        TokenService.clearAuthToken()\n        window.location.href = '/posts'\n      })\n  }\n\n  loginUser = e => {\n    e.preventDefault();\n    const { login_email, login_password } = e.target\n\n    AuthApiService.postLogin({\n      email: login_email.value,\n      password: login_password.value\n    })\n      .then(res => {\n        login_email.value = ''\n        login_password.value = ''\n        TokenService.saveAuthToken(res.authToken);\n        this.setState({ logged_in: true });\n        window.location.href = '/posts'\n      })\n      .catch(err => {\n        this.setState({ logInError: err })\n      })\n  }\n\n  handleUpdate = (post_id, e) => {\n    e.preventDefault();\n\n    const updatedPost = {\n      pet_name: e.target.pet_name.value,\n      types_of_pet: e.target.types_of_pet.value,\n      email: e.target.email.value,\n      hobbies: e.target.hobbies.value\n    }\n\n    fetch(`${config.API_ENDPOINT}/posts/${post_id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(updatedPost)\n    })\n      .then(res => {\n        if (res.ok) {\n          window.location.href = '/myposts'\n        }\n        else {\n          return res.json().then(err => {\n            throw err;\n          })\n        }\n      });\n  }\n\n  handleLogout = () => {\n    TokenService.clearAuthToken()\n  }\n\n  addPost = (post) => {\n    this.setState({\n      posts: [...this.state.posts, post]\n    })\n  }\n\n  setPostId = post_id => {\n    this.setState({ post_id })\n  }\n\n  /*\n    renderNavRoutes() {\n      return (\n        <>\n          <Route\n            exact\n            path=\"/\"\n            component={MainNav}\n          />\n          <Route\n            path=\"/posts\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/myposts\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/edit\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/login\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/profile\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/editProfile\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/signup\"\n            component={HamburgerNav}\n          />\n          <Route\n            path=\"/addPost\"\n            component={AddPostNav}\n          />\n        </>\n      )\n    }\n  \n    renderMainRoutes() {\n      return (\n        <>\n          <Route\n            exact\n            path=\"/\"\n            component={LandingPage}\n          />\n          <Route\n            path=\"/posts\"\n            component={PostsHomePage}\n          />\n          <Route\n            path=\"/myposts\"\n            component={MyPosts}\n          />\n          <Route\n            path=\"/edit\"\n            component={UpdatePost}\n          />\n          <Route\n            path=\"/login\"\n            component={LoginForm}\n          />\n          <Route\n            path=\"/profile\"\n            component={Profile}\n          />\n          <Route\n            path=\"/editProfile\"\n            component={UpdateUser}\n          />\n          <Route\n            path=\"/addPost\"\n            component={Post}\n          />\n          <Route\n            path='/signup'\n            component={SignUpForm}\n          />\n        </>\n      )\n    }\n    render() {\n      const value = {\n        posts: this.state.posts,\n        addPost: this.handleSubmit,\n        deletePost: this.handleDeletePost,\n        logOut: this.handleLogout,\n  \n      }\n  \n      return (\n        <ApiContext.Provider value={value}>\n          <div className='App'>\n            <nav className='App_nav'>\n              {this.renderNavRoutes()}\n            </nav>\n            <header className='App_header'>\n              <h1>\n                <Link to='/'>PawUp</Link>\n                {' '}\n              </h1>\n            </header>\n            <main className='App_main'>\n              {this.renderMainRoutes()}\n            </main>\n          </div>\n        </ApiContext.Provider>\n      )\n    }\n  }\n  \n  export default App\n  */\n  render() {\n    const value = {\n      posts: this.state.posts,\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"header\">\n          <Route exact path=\"/\" render={(props) => <MainNav {...props} handleLogout={this.handleLogout} logged_in={this.state.logged_in} />} />\n          <Route path=\"/posts\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/myposts\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/edit\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/login\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/profile\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/editProfile\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/signup\" render={(props) => <HamburgerNav {...props} handleLogout={this.handleLogout} />} />\n          <Route path=\"/addPost\" render={(props) => <AddPostNav {...props} handleLogout={this.handleLogout} />} />\n        </header>\n        <div className='App_main'>\n          <ApiContext.Provider value={value}>\n            <Route exact path=\"/\" render={(props) => <LandingPage {...props} posts={this.state.posts} addUser={event => this.handleUserSubmit(event)} signUpError={this.state.signUpError} />} />\n            <Route exact path='/myposts' render={(props) => <MyPosts {...props} setId={(post_id) => this.setPostId(post_id)} handleDeletePost={post_id => this.handleDeletePost(post_id)} />} />\n            <Route exact path='/edit' render={(props) => <UpdatePost {...props} posts={this.state.posts} postId={this.state.post_id} updatePost={(e) => this.handleUpdate(this.state.post_id, e)} />} />\n            <Route exact path='/login' render={(props) => <LoginForm {...props} loginUser={(event) => (this.loginUser(event))} error={this.state.logInError} />} />\n            <Route exact path='/editProfile' component={UpdateUser} />\n            <Route exact path='/posts' render={(props) => <PostsHomePage {...props} posts={this.state.posts} />} />\n            <Route exact path='/addPost' render={(props) => <Post {...props} addPost={(event) => this.handleSubmit(event)} />} />\n            <Route exact path='/profile' render={(props) => <Profile {...props} deleteUser={(user_id) => this.handleDeleteUser(user_id)} />} />\n            <Route exact path='/signup' component={SignUpForm} />\n          </ApiContext.Provider>\n        </div>\n      </div>\n    );\n  }\n\n}\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n        families: ['Unica One', 'cursive']\n    }\n});\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}